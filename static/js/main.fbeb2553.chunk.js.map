{"version":3,"sources":["components/signInPage/googleOAuth.js","buttons/index.js","actions/index.js","saga/index.js","reducers/index.js","store/store.js","components/signInPage/signIn.js","components/signInPage/signUp.js","components/signInPage/signMain.js","components/Dashboard/campaignHolder/campaign.js","components/Dashboard/campaignHolder/campaignHolder.js","components/Dashboard/emailListHolder/emailList.js","components/Dashboard/emailListHolder/emailListHolder.js","components/Dashboard/navbuttons.js","components/Dashboard/campaignHolder/newCampaign/campaignForm.js","components/Dashboard/campaignHolder/newCampaign/newCam.js","components/Dashboard/campaignHolder/newCampaign/loadedCampForm.js","components/Dashboard/campaignHolder/newCampaign/loadedCampaign.js","components/Dashboard/emailListHolder/emailListUploader.js","components/Dashboard/dashBoard.js","components/App.js","serviceWorker.js","index.js"],"names":["Google","ButtonPopRightLite","forwardRef","ref","breath","grow","children","expand","title","useSpring","round1","round2","widthfont","xfront","round","setRound","rest","setRest","width","height","pusher","setPusher","flexGrow","opacity","textDes","setTextDes","config","duration","div","className","style","id","x","y","colorInterpolationFilters","stdDeviation","rect","mixBlendMode","fill","fillOpacity","filter","rx","ry","ActionTypes","getAllEmailList","type","payload","watchUserSignIn","getEmailList","getCampaigns","fetchEmaillist","fetch","then","re","json","fetchCampaings","take","fork","call","delay","allEmailList","filteredEmailList","emailList","my_customer","put","allCampaigns","filteredCampaigns","camp","initialUser","username","password","email","token","rootReducer","combineReducers","userData","user","action","campaigns","loadedCampaign","loadedCamp","campId","campName","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","SignIn","setUserName","setPassWord","push","setEmail","setId","useHistory","useState","expandEmail","expandGoogle","expandGuest","expandUser","expandPass","setExpand","googleRef","useRef","guestRef","emailRef","login","axios","post","res","allUserData","data","user_id","dispatch","console","log","useEffect","current","addEventListener","xmlns","version","viewBox","d","transform","strokeWidth","stroke","value","onChange","e","target","onFocus","onBlur","flexShrink","position","onClick","strokeLinecap","strokeLinejoin","strokeOpacity","href","SignUp","userRef","passRef","conPassRef","newUser","alert","postNewUser","SignMain","setUserData","name","pass","Id","path","render","exact","Campaign","Campaigns","camps","setCamps","getState","subscribe","map","key","EmailList","listName","file","EmailLists","lists","setLists","list","upload_file","NavButtons","CampForm","newCampaignData","setNewCampaignData","emailCSV","setEmailCSV","options","htmlFor","senderName","emailSub","senderEmail","emailAttachment","files","emailListCVS","NewCam","emailBodyJSON","emailBodyHTML","emailEditorRef","editor","exportHtml","design","html","setTimeout","dataForm","FormData","Jda","JSON","stringify","newHtml","a","writeFile","append","Number","catch","er","response","status","document","getElementsByClassName","click","sender_name","sender_email","email_subject","camp_emails","email_message","temp_json","ht","attachment","LoadedCampForm","loadTheTemplate","first","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","defaultValue","LoadedCamp","loadDesign","EmailListUploader","emailListState","setEmailListState","formData","DashBoard","xmlnsXlink","cx","cy","r","fx","fy","gradientTransform","gradientUnits","xlinkHref","offset","stopColor","stopOpacity","lineHeight","InkscapeFontSpecification","fontVariantLigatures","fontVariantCaps","fontVariantNumeric","fontVariantEastAsian","whiteSpace","ariaLabel","App","activeSend","activeMail","Boolean","location","hostname","match","ReactDOM","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fbeb2553.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport'./googleOAuth.css';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Google(){\r\n    const [status, setStatus] = useState(null)\r\n    const [auth, setAuth] = useState(null)\r\n    useEffect( () => {\r\n        window.gapi.load(\"client:auth2\", async () => {\r\n        await window.gapi.client.init({clientId:'890015266885-qp1ghupjc2ovi9a1o0kfqetli7at2m94.apps.googleusercontent.com',scope: 'email'})\r\n        let Oauth = await window.gapi.auth2.getAuthInstance()\r\n        setAuth(await window.gapi.auth2.getAuthInstance())\r\n        setStatus(Oauth.isSignedIn.get())\r\n        console.log(status)\r\n        })\r\n    })\r\n    \r\n\r\n    return(\r\n        <div className=\"googleWrapper\" onClick={() => auth.signIn()}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Google","import React, { forwardRef } from 'react';\r\nimport { } from 'react-dom';\r\nimport './buttons.css'\r\nimport { useSpring, config, animated } from 'react-spring'\r\n\r\nexport const ButtonPopRightLite = forwardRef(({ breath, grow, children, expand, title }, ref) => {\r\n    const [round, setRound] = useSpring(() => ({ round1: \"50%\", round2: \"50%\", widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [rest, setRest] = useSpring(() => ({ widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [pusher, setPusher] = useSpring(() => ({ width: `${breath}%`, height: \"100%\" }))\r\n    const [textDes, setTextDes] = useSpring(() => ({ flexGrow: 0, opacity: 0 }))\r\n\r\n\r\n    const pop = () => {\r\n\r\n        setRest({ widthfont: \"100%\", xfront: \"0%\" })\r\n        setRound({ round1: \"10%\", config: { duration: 90 } })\r\n        setPusher({ width: `${breath * grow}%` })\r\n        setTextDes({ flexGrow: grow - 1, opacity: 1 })\r\n    }\r\n\r\n    const shrink = () => {\r\n\r\n        setRest({ widthfont: \"90%\", xfront: \"5%\" })\r\n        setRound({ round1: \"50%\", config: { duration: 800 } })\r\n        setPusher({ width: `${breath}%` })\r\n        setTextDes({ flexGrow: 0, opacity: 0 })\r\n    }\r\n\r\n    expand ? pop() : shrink()\r\n    return (\r\n        <>\r\n            <animated.div className=\"liteWrapper\" style={pusher}>\r\n\r\n                <animated.div className=\"ten\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\r\n                    <svg\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        className=\"tenSVG\"\r\n                    >\r\n                        <defs>\r\n                            <filter\r\n                                id=\"filter973\"\r\n                                width=\"10.278\"\r\n                                height=\"10.306\"\r\n                                x=\"-0.139\"\r\n                                y=\"-0.153\"\r\n                                colorInterpolationFilters=\"sRGB\"\r\n                            >\r\n                                <feGaussianBlur stdDeviation=\"10\"></feGaussianBlur>\r\n                            </filter>\r\n                        </defs>\r\n                        <animated.rect className=\"back\"\r\n                            style={{ mixBlendMode: \"normal\" }}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            fill=\"#000\"\r\n                            fillOpacity=\"0.214\"\r\n                            filter=\"url(#filter973)\"\r\n                            opacity=\"0.6\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n                        <animated.rect className=\"font\"\r\n                            x={rest.xfront}\r\n                            y=\"5%\"\r\n                            width={rest.widthfont}\r\n                            height=\"90%\"\r\n                            fill=\"#fff\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n\r\n                    </svg>\r\n\r\n                </animated.div>\r\n                <div className=\"infoWrapper\">\r\n                    <div className=\"svgHolder\">\r\n                        {children}\r\n                    </div>\r\n                    <animated.div className=\"textHolder\" style={textDes}>\r\n                        {title}\r\n                    </animated.div>\r\n                </div>\r\n                <animated.div className=\"eventDetector2\" ref={ref}></animated.div>\r\n            </animated.div>\r\n        </>\r\n\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ButtonPopRight = forwardRef(({ grow, contract, children }, ref) => {\r\n//     const [textWidth, setTextWidth] = useSpring(() => ({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` }))\r\n//     const [tranformWidth, setTranformWidth] = useSpring(() => ({ width: \"12.131\" }))\r\n//     const [tranformBackWidth, setTranformBackWidth] = useSpring(() => ({ width: \"13.173\" }))\r\n//     const [tranformX, setTranformX] = useSpring(() => ({ x: \"56.383\" }))\r\n//     const [tranformBackX, setTranformBackX] = useSpring(() => ({ x: \"55.877\" }))\r\n//     const [tranformWrapper, setTranformWrapper] = useSpring(() => ({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }))\r\n//     const [tranformSVG, setTranformSVG] = useSpring(() => ({ width: \"100%\", height: \"100%\" }))\r\n\r\n//     const shrink = () => {\r\n//         setTranformX({ x: \"56.383\", delay: 50 })\r\n//         setTranformBackX({ x: \"55.877\", delay: 50 })\r\n//         setTranformWidth({ width: \"12.131\" })\r\n//         setTranformBackWidth({ width: \"13.173\" })\r\n//         setTranformSVG({ width: \"100%\", height: \"100%\", delay: 50 })\r\n//         setTranformWrapper({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min, delay: 300 })\r\n//         setTextWidth({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` })\r\n//     }\r\n\r\n//     const expand = () => {\r\n//         setTranformX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformBackX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformBackWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformSVG({ width: `${grow.SVG}%  `, height: \"100%\" })\r\n//         setTranformWrapper({ width: `${grow.grow}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min })\r\n//         setTextWidth({ width: `${grow.textWidth}vw`, opacity: 1, fontSize: `${grow.fontSize}vw`, delay: 200 })\r\n//     }\r\n\r\n//     contract ? shrink() : expand()\r\n//     try {\r\n//         return (\r\n//             <animated.div className=\"buttonWrapper\" style={tranformWrapper}>\r\n//                 <animated.svg\r\n//                     className=\"buttonSVG\"\r\n//                     xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     width={tranformSVG.width}\r\n//                     height={tranformSVG.height}\r\n\r\n//                     version=\"1.1\"\r\n//                     viewBox=\"0 0 16.835 15.632\"\r\n//                 >\r\n//                     <defs>\r\n//                         <filter\r\n//                             id=\"filter973\"\r\n//                             width=\"1.278\"\r\n//                             height=\"1.306\"\r\n//                             x=\"-0.139\"\r\n//                             y=\"-0.153\"\r\n//                             colorInterpolationFilters=\"sRGB\"\r\n//                         >\r\n//                             <feGaussianBlur stdDeviation=\"0.763\"></feGaussianBlur>\r\n//                         </filter>\r\n//                     </defs>\r\n//                     <g\r\n//                         fillOpacity=\"1\"\r\n//                         strokeWidth=\"0.008\"\r\n//                         transform=\"translate(-54.046 -143.913)\"\r\n//                     >\r\n//                         <animated.rect\r\n//                             style={{ mixBlendMode: \"normal\" }}\r\n//                             width={tranformBackWidth.width}\r\n//                             height=\"11.97\"\r\n//                             x={tranformBackX.x}\r\n//                             y=\"145.744\"\r\n//                             fill=\"#000\"\r\n//                             fillOpacity=\"0.214\"\r\n//                             filter=\"url(#filter973)\"\r\n//                             opacity=\"0.799\"\r\n//                             rx=\"5.476\"\r\n//                             ry=\"5.985\"\r\n//                         ></animated.rect>\r\n//                         <animated.rect\r\n//                             width={tranformWidth.width}\r\n//                             height=\"11.331\"\r\n//                             x={tranformX.x}\r\n//                             y=\"146.041\"\r\n//                             fill=\"#fff\"\r\n//                             rx=\"6.065\"\r\n//                             ry=\"5.666\"\r\n//                         ></animated.rect>\r\n//                     </g>\r\n//                 </animated.svg>\r\n//                 <div style={{ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }} className=\"SVGcontainer\">\r\n//                     <animated.div style={textWidth} className=\"Text\">{grow.text}</animated.div>\r\n//                     {children}\r\n//                 </div>\r\n//                 <div className=\"eventDetector\" ref={ref}></div>\r\n//             </animated.div>\r\n\r\n//         );\r\n//     } catch {\r\n//         return (\r\n//             console.log(\"A Button should look like this and also have the same attributes <ButtonPopRight ontract={contract} grow={{radius:4, SVG:6, front:20, transRect:52,textWidth:4,fontSize:1, text:\\\"lets See\\\"}}><div className=\\\"child\\\"></div></ButtonPopRight>\")\r\n//         )\r\n//     }\r\n// });\r\n\r\n","export const ActionTypes = {\r\n    STORE_USER: \"STORE_USER\",\r\n    STORE_CAMPAIGN: \"STORE_CAMPAIGN\",\r\n    LOAD_CAMPAIGN: \"LOAD_CAMPAIGN\",\r\n    GET_ALL_EMAIL_LIST: \"GET_ALL_EMAIL_LIST\",\r\n    STORE_ALL_EMAIL_LIST: \"STORE_ALL_EMAIL_LIST\",\r\n    GET_ALL_CAMPAIGNS: \"GET_ALL_CAMPAIGNS\",\r\n    STORE_ALL_CAMPAIGNS: \"STORE_ALL_CAMPAIGNS\",\r\n    EMAIL_LIST_ADDED: \"EMAIL_LIST_ADDED\",\r\n    CAMPAIGNS_ADDED: \"CAMPAIGNS_ADDED\"\r\n};\r\n\r\nexport const storeUserRequest = (payload) => ({\r\n    type: ActionTypes.STORE_USER,\r\n    payload: payload,\r\n});\r\n\r\nexport const storeCampaign = (payload) => ({\r\n    type: ActionTypes.STORE_CAMPAIGN,\r\n    payload: payload,\r\n});\r\n\r\nexport const loadCampaign = (payload) => ({\r\n    type: ActionTypes.LOAD_CAMPAIGN,\r\n    payload: payload,\r\n});\r\n\r\nexport const getAllEmailList = (id) => ({\r\n    type: ActionTypes.GET_ALL_EMAIL_LIST,\r\n    payload: id\r\n});\r\n\r\nexport const getAllCampaigns = (id) => ({\r\n    type: ActionTypes.GET_ALL_CAMPAIGNS,\r\n    payload: id\r\n});\r\n\r\nexport const storeAllEmailList = (emailist) => ({\r\n    type: ActionTypes.STORE_ALL_EMAIL_LIST,\r\n    payload: emailist\r\n});\r\n\r\nexport const storeAllCampaigns = (campaigns) => ({\r\n    type: ActionTypes.STORE_ALL_CAMPAIGNS,\r\n    payload: campaigns\r\n});\r\n\r\nexport const addCampaigns = (data) => ({\r\n    type: ActionTypes.CAMPAIGNS_ADDED,\r\n    payload: data\r\n});\r\n\r\nexport const addEmailList = (data) => ({\r\n    type: ActionTypes.EMAIL_LIST_ADDED,\r\n    payload: data\r\n});","import {\r\n    call, take, put, delay, fork\r\n} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport store from '../store/store'\r\nimport { ActionTypes, storeAllEmailList, storeAllCampaigns } from '../actions'\r\n\r\n\r\nconst fetchEmaillist = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newemail/\").then(re => re.json())\r\n}\r\n\r\nconst fetchCampaings = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\").then(re => re.json())\r\n}\r\n\r\nconst postEmaillist = () => {\r\n    return axios.post(\"https://emailengine2020.herokuapp.com/newemail/\").then(re => re.json())\r\n}\r\n\r\nconst postCampaings = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\").then(re => re.json())\r\n}\r\n\r\nexport function* watchUserSignIn() {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.GET_ALL_EMAIL_LIST)\r\n        yield fork(getCampaigns, payload)\r\n        yield call(getEmailList, payload)\r\n    }\r\n}\r\n\r\nexport function* watchCampAdd() {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.EMAIL_LIST_ADDED)\r\n        yield fork(getCampaigns, store.getState().userData.id)\r\n        yield call(getEmailList, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* watchEmailListAdd() {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.CAMPAIGNS_ADDED)\r\n        yield fork(getCampaigns, store.getState().userData.id)\r\n        yield call(getEmailList, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* getEmailList(payload) {\r\n    delay(300)\r\n    const allEmailList = yield call(fetchEmaillist)\r\n    const filteredEmailList = allEmailList.filter(emailList => emailList.my_customer === payload)\r\n    yield put(storeAllEmailList(filteredEmailList))\r\n}\r\n\r\nexport function* getCampaigns(payload) {\r\n    delay(300)\r\n    const allCampaigns = yield call(fetchCampaings)\r\n    const filteredCampaigns = allCampaigns.filter(camp => camp.my_customer === payload)\r\n    yield put(storeAllCampaigns(filteredCampaigns))\r\n}\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { ActionTypes } from '../actions'\r\n\r\nlet lastCamp = 0\r\n\r\nconst initialUser = {\r\n    username: \"\",//string\r\n    password: \"\", //string\r\n    email: \"\",    //string\r\n    id: 0, //number\r\n    token: \"\"//string\r\n}\r\n\r\n\r\nconst storeUser = (user = initialUser, action) => {\r\n    if (action.type === ActionTypes.STORE_USER) {\r\n        return action.payload\r\n    }\r\n    return user\r\n};\r\n\r\nconst storeCampaign = (campaigns = [], action) => {\r\n    if (action.type === ActionTypes.STORE_ALL_CAMPAIGNS) {\r\n        return action.payload\r\n    }\r\n    return campaigns\r\n};\r\n\r\nconst loadCampaign = (loadedCamp = { campId: 0, campName: \"\" }, action) => {\r\n    if (action.type === ActionTypes.LOAD_CAMPAIGN) {\r\n        return action.payload\r\n    }\r\n    return loadedCamp\r\n};\r\n\r\nconst storeEmailList = (emailList = [], action) => {\r\n    if (action.type === ActionTypes.STORE_ALL_EMAIL_LIST) {\r\n        return action.payload\r\n    }\r\n    return emailList\r\n};\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userData: storeUser,\r\n    campaigns: storeCampaign,\r\n    emailList: storeEmailList,\r\n    loadedCampaign: loadCampaign\r\n\r\n});\r\n\r\nexport default rootReducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n//     return mode \r\n// };\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchUserSignIn } from \"../saga\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(watchUserSignIn);\r\n\r\nexport default store;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport './signin.css';\r\nimport Google from './googleOAuth';\r\nimport { ButtonPopRightLite } from '../../buttons';\r\nimport store from '../../store/store'\r\nimport { storeUserRequest, getAllEmailList } from '../../actions'\r\n\r\nconst SignIn = ({ userData, setUserName, setPassWord, setEmail, setId }) => {\r\n    const { push } = useHistory(null)\r\n    const [expand, setExpand] = useState({\r\n        expandEmail: false, expandGoogle: false,\r\n        expandGuest: false, expandUser: true, expandPass: true\r\n    })\r\n\r\n    const googleRef = useRef(null)\r\n    const guestRef = useRef(null)\r\n    const emailRef = useRef(null)\r\n\r\n    const login = () => {\r\n        axios.post(\"https://emailengine2020.herokuapp.com/api-token-auth/\",\r\n            {\r\n                username: userData.username,\r\n                password: userData.password\r\n            }).then(res => {\r\n                const allUserData = {\r\n                    id: res.data.user_id,\r\n                    username: userData.username,\r\n                    password: userData.password,\r\n                    email: res.data.email,\r\n                    token: res.data.token,\r\n                }\r\n                store.dispatch(storeUserRequest(allUserData))\r\n                store.dispatch(getAllEmailList(res.data.user_id))\r\n                push(\"/dashboard\")\r\n            }\r\n\r\n            )\r\n        console.log(userData.username, userData.password)\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        emailRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandEmail: true }));\r\n        emailRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandEmail: false }));\r\n        googleRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGoogle: true }));\r\n        googleRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGoogle: false }));\r\n        guestRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGuest: true }));\r\n        guestRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGuest: false }));\r\n        emailRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n        googleRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n        guestRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"inputHolder\">\r\n            <div className=\"loginTextDiv    signElements\">\r\n                Login\r\n                </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"username\"}\r\n                        breath={12} grow={3}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 83.41 83.41\"\r\n                        >\r\n                            <g transform=\"translate(3.692 -95.684)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    stroke=\"none\"\r\n                                    strokeWidth=\"1.144\"\r\n                                    d=\"M-96.838 11.309a157.626 157.626 0 00-157.625 157.627A157.626 157.626 0 00-96.838 326.56 157.626 157.626 0 0060.79 168.936 157.626 157.626 0 00-96.838 11.309zm0 52.867a48.065 48.065 0 0148.067 48.066 48.065 48.065 0 01-48.067 48.065 48.065 48.065 0 01-48.064-48.065 48.065 48.065 0 0148.064-48.066zm-.096 108.095a102.492 102.492 0 01.096 0A102.492 102.492 0 01.018 241.242a102.492 102.492 0 000 .002 120.87 120.87 0 01-96.856 48.56 120.87 120.87 0 01-96.855-48.56 102.492 102.492 0 0196.76-68.972z\"\r\n                                    opacity=\"1\"\r\n                                    transform=\"matrix(.26458 0 0 .26458 63.635 92.692)\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            value={userData.username}\r\n                            onChange={e => setUserName(e.target.value)}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"password\"}\r\n                        breath={12.5} grow={3}>\r\n                        <svg\r\n                            style={{ flexShrink: 0, flexGrow: 1 }}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            onChange={e => setPassWord(e.target.value)}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"loginButtonDiv  signElements\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"90%\"\r\n                    height=\"90%\"\r\n                    style={{ position: \"absolute\" }}\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 210.414 55.444\"\r\n                >\r\n                    <defs>\r\n                        <filter\r\n                            id=\"filter1574\"\r\n                            width=\"1.131\"\r\n                            height=\"1.789\"\r\n                            x=\"-0.066\"\r\n                            y=\"-0.394\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"5.094\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g\r\n                        fillOpacity=\"1\"\r\n                        strokeWidth=\"0.295\"\r\n                        transform=\"translate(-33.132 -90.584)\"\r\n                    >\r\n                        <rect\r\n                            width=\"185.964\"\r\n                            height=\"30.994\"\r\n                            x=\"45.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#848484\"\r\n                            stroke=\"none\"\r\n                            filter=\"url(#filter1574)\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                        <rect\r\n                            width=\"185.964\"\r\n                            height=\"30.994\"\r\n                            x=\"45.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#1d4f81\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                    </g>\r\n                </svg>\r\n                <p>Login</p>\r\n                <div className=\"clickDetector\" width=\"100%\" height=\"100%\"\r\n                    onClick={() => login()}\r\n                >\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpDiv       signElements\">\r\n                <div className=\"signUpText subSignUpDiv\">\r\n                    don't have an account?\r\n                </div>\r\n                <div className=\"signUpButtons subSignUpDiv\">\r\n                    <ButtonPopRightLite ref={emailRef} expand={expand.expandEmail}\r\n                        title={\"Sign up with Email\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 83.036 83.036\"\r\n                        >\r\n                            <g transform=\"translate(-47.178 -71.932)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.372\"\r\n                                    d=\"M56.017 84.08c-4.848 0-8.752 3.678-8.752 8.246v3.826L85.11 125.26c1.53 1.023 2.317 1.168 4.143 1.604 1.845-.325 3.428-.651 4.697-2.15 6.17-4.635 12.339-9.272 18.507-13.908l17.679-13.413v-5.067c0-4.568-3.903-8.245-8.751-8.245zm-8.752 18.061v35.055c0 4.568 3.904 8.245 8.752 8.245h65.368c4.848 0 8.75-3.677 8.75-8.245v-33.853c-12.011 9.135-24.024 18.29-36.04 27.203-1.77 1.299-3.17 1.791-4.867 1.697-1.432.063-3.012-.242-4.296-1.132l-37.667-28.97zm90.09 48.362a61.948 61.158 0 01-.517.644c.18-.202.352-.416.517-.644z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <ButtonPopRightLite ref={googleRef} expand={expand.expandGoogle}\r\n                        title={\"Sign up with Google\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 33.883 34.604\"\r\n                        >\r\n                            <g transform=\"translate(-113.082 -182.27)\">\r\n                                <g fillOpacity=\"1\">\r\n                                    <path\r\n                                        fill=\"#e94235\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M130.352 182.27c-9.463 0-17.134 7.73-17.134 17.266 0 9.536 7.671 17.266 17.134 17.266 8.601 0 15.132-5.804 16.357-14.124 0 0 .024-.178.035-.273l.04-.323c.075-.645.122-1.303.132-1.975.005-.362-.054-.9-.131-1.468v-1.787a.477.477 0 00-.478-.478H130.9a.477.477 0 00-.478.478v5.568c0 .265.213.478.478.478h8.9c-1.147 4.291-4.463 7.082-9.234 7.082-5.665 0-10.257-4.628-10.257-10.336 0-5.68 4.547-10.296 10.183-10.337h.074c2.407 0 4.737.854 6.582 2.41l4.82-4.873a17.062 17.062 0 00-11.617-4.574z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#4285f4\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M130.9 196.374a.477.477 0 00-.477.478v5.568c0 .265.213.478.478.478h8.9c-.614 2.298-1.851 4.165-3.6 5.404l5.344 4.336a16.658 16.658 0 005.164-9.96c.114-.899.235-1.579.256-2.571.003-1.319-.055-2.029-.18-3.255-.027-.264-.213-.478-.478-.478z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#34a853\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M120.817 202.818l-5.878 4.53c2.817 5.647 8.615 9.525 15.315 9.525 4.47 0 8.394-1.56 11.291-4.235l-5.344-4.336c-1.604 1.062-3.468 1.699-5.732 1.677-4.5-.043-8.183-2.999-9.652-7.16z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#fabb05\"\r\n                                        stroke=\"none\"\r\n                                        strokeLinecap=\"butt\"\r\n                                        strokeLinejoin=\"miter\"\r\n                                        strokeOpacity=\"1\"\r\n                                        strokeWidth=\"0.265\"\r\n                                        d=\"M115.008 191.838c-1.144 2.315-1.926 4.895-1.926 7.656 0 2.834.682 5.505 1.882 7.865l5.853-4.54a9.967 9.967 0 01-.511-3.207c0-1.172.247-2.166.533-3.287z\"\r\n                                    ></path>\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <ButtonPopRightLite ref={guestRef} expand={expand.expandGuest}\r\n                        title={\"Explore as Guest\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 86.522 94.45\"\r\n                        >\r\n                            <g\r\n                                fill=\"#148e94\"\r\n                                fillOpacity=\"1\"\r\n                                strokeWidth=\"0.265\"\r\n                                transform=\"translate(-63.635 -92.692)\"\r\n                            >\r\n                                <path\r\n                                    d=\"M114.667 149.87c.019.46-.455 1.01-1.052 1.837-.784 1.085-1.79 2.663-2.683 4.138a69.293 69.293 0 00-1.247 2.134c-.895-.476-1.893-.803-3.104-.788-1.168.014-2.417.342-3.57.813-.24-.414-.55-.915-.994-1.615a551.497 551.497 0 00-3.4-5.267c-.326-.5-.557-.85-.672-1.108a58.964 58.964 0 00-34.31 18.133 58.964 58.964 0 0086.522.192 58.964 58.964 0 00-35.49-18.468zm-8.37 10.952c.819-.01 1.608.212 2.33.558.085.546.266 1.284.578 2.42.775 2.822 2.34 8.092 3.089 10.796.749 2.704.71 2.933-.34 4.188-1.051 1.256-2.928 4.286-3.979 5.484-1.05 1.199-1.12 2.874-3.99-.524-1.053-1.248-2.116-3.38-3.314-4.565-1.199-1.184-1.198-1.26-.43-4.098.77-2.838 2.306-8.438 3.018-11.542.177-.771.303-1.387.388-1.888.937-.452 1.929-.82 2.65-.83z\"\r\n                                    opacity=\"0.729\"\r\n                                ></path>\r\n                                <path\r\n                                    d=\"M105.003 92.692c-5.63.01-11.209.256-14.272.475-3.5.25-3.714.464-3.428 3.858.286 3.393.51 9.965.76 13.251.25 3.286.526 3.286-1.224 3.214-1.75-.071-4.965-.214-6.644-.286-1.679-.07-1.822-.071-1.893 1.215-.072 1.286-.071 3.857-.179 5.179-.1 1.243-.135 1.36 7.64 1.408a21.167 21.167 0 00-.575 4.904c0 11.69 9.476 21.166 21.166 21.166s21.167-9.476 21.167-21.166c0-1.679-.2-3.35-.595-4.982 7.565-.118 7.668-.378 7.702-1.437.035-1.143.107-3.214.178-4.393.072-1.179.521-1.668-.98-1.839-1.503-.17-4.948-.054-6.52-.054-1.572 0-1.643.07-1.5-3.108.143-3.178.5-9.607.536-12.894.036-3.286-.25-3.428-3.393-3.714a208.136 208.136 0 00-15.537-.786c-.8-.009-1.605-.012-2.409-.01z\"\r\n                                    opacity=\"0.729\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                </div>\r\n            </div>\r\n            < div className=\"resetPassDiv signElements\" >\r\n                Forgot your password ? &nbsp; <a href=\"\"> Reset </a>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect, useState, useRef } from 'react';\r\nimport './signup.css';\r\nimport Google from './googleOAuth';\r\nimport { ButtonPopRightLite } from '../../buttons';\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst SignUp = ({ setUserName }) => {\r\n    const { push } = useHistory(null)\r\n\r\n\r\n    const [expand, setExpand] = useState({\r\n        expandEmail: false, expandGoogle: false,\r\n        expandGuest: false, expandUser: true, expandPass: true\r\n    })\r\n\r\n    const userRef = useRef(null)\r\n    const emailRef = useRef(null)\r\n    const passRef = useRef(null)\r\n    const conPassRef = useRef(null)\r\n\r\n    const postNewUser = () => {\r\n        if (conPassRef.current.value === passRef.current.value) {\r\n            if (conPassRef.current.value && passRef.current.value && userRef.current.value && emailRef.current.value) {\r\n                const newUser = {\r\n                    username: userRef.current.value,\r\n                    email: emailRef.current.value,\r\n                    password: passRef.current.value,\r\n                }\r\n                axios.post(\"http://emailengine2020.herokuapp.com/contactapi/users/\", newUser)\r\n                    .then(res => console.log(res))\r\n                setUserName(userRef.current.value)\r\n                push(\"/\")\r\n            } else alert(\"Please fill all fields\")\r\n\r\n        } else alert(\"Passwords do not match\")\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // emailRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandEmail: true }))\r\n        // emailRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandEmail: false }))\r\n        // googleRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGoogle: true }))\r\n        // googleRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGoogle: false }))\r\n        // guestRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGuest: true }))\r\n        // guestRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGuest: false }))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"inputHolder\">\r\n            <div className=\"loginTextDiv    signElements\">\r\n                SignUp\r\n            </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"username\"}\r\n                        breath={12} grow={3}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(3.692 -95.684)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    stroke=\"none\"\r\n                                    strokeWidth=\"1.144\"\r\n                                    d=\"M-96.838 11.309a157.626 157.626 0 00-157.625 157.627A157.626 157.626 0 00-96.838 326.56 157.626 157.626 0 0060.79 168.936 157.626 157.626 0 00-96.838 11.309zm0 52.867a48.065 48.065 0 0148.067 48.066 48.065 48.065 0 01-48.067 48.065 48.065 48.065 0 01-48.064-48.065 48.065 48.065 0 0148.064-48.066zm-.096 108.095a102.492 102.492 0 01.096 0A102.492 102.492 0 01.018 241.242a102.492 102.492 0 000 .002 120.87 120.87 0 01-96.856 48.56 120.87 120.87 0 01-96.855-48.56 102.492 102.492 0 0196.76-68.972z\"\r\n                                    opacity=\"1\"\r\n                                    transform=\"matrix(.26458 0 0 .26458 63.635 92.692)\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            ref={userRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"email\"}\r\n                        breath={12} grow={2.2}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-7 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.351\"\r\n                                    d=\"M104.031 93.44a41.705 41.705 0 00-41.705 41.705 41.705 41.705 0 0041.705 41.705 41.705 41.705 0 0041.706-41.705A41.705 41.705 0 00104.03 93.44zm-21.9 22.092h44.008c3.264 0 5.891 2.508 5.891 5.623v3.455l-11.901 9.147-12.46 9.485c-.854 1.021-1.92 1.243-3.162 1.465-1.23-.297-1.76-.395-2.79-1.093l-25.478-19.85v-2.61c0-3.114 2.628-5.622 5.893-5.622zm-5.892 12.316l25.359 19.756c.864.607 1.928.814 2.892.771 1.143.064 2.085-.27 3.277-1.156 8.09-6.079 16.177-12.322 24.263-18.552v23.086c0 3.115-2.627 5.623-5.891 5.623H82.132c-3.265 0-5.893-2.508-5.893-5.623z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            ref={emailRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"password\"}\r\n                        breath={12} grow={3}>\r\n                        {/* <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-7 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.351\"\r\n                                    d=\"M104.031 93.44a41.705 41.705 0 00-41.705 41.705 41.705 41.705 0 0041.705 41.705 41.705 41.705 0 0041.706-41.705A41.705 41.705 0 00104.03 93.44zm-21.9 22.092h44.008c3.264 0 5.891 2.508 5.891 5.623v3.455l-11.901 9.147-12.46 9.485c-.854 1.021-1.92 1.243-3.162 1.465-1.23-.297-1.76-.395-2.79-1.093l-25.478-19.85v-2.61c0-3.114 2.628-5.622 5.893-5.622zm-5.892 12.316l25.359 19.756c.864.607 1.928.814 2.892.771 1.143.064 2.085-.27 3.277-1.156 8.09-6.079 16.177-12.322 24.263-18.552v23.086c0 3.115-2.627 5.623-5.891 5.623H82.132c-3.265 0-5.893-2.508-5.893-5.623z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg> */}\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            ref={passRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"confirm password\"}\r\n                        breath={12} grow={5.8}>\r\n                        <svg\r\n                            style={{ flexShrink: 0, flexGrow: 1 }}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            ref={conPassRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"loginButtonDiv  signElements\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"90%\"\r\n                    height=\"90%\"\r\n                    style={{ position: \"absolute\" }}\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 210.414 55.444\"\r\n                >\r\n                    <defs>\r\n                        <filter\r\n                            id=\"filter1574\"\r\n                            width=\"1.131\"\r\n                            height=\"1.789\"\r\n                            x=\"-0.066\"\r\n                            y=\"-0.394\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"5.094\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g\r\n                        fillOpacity=\"1\"\r\n                        strokeWidth=\"0.295\"\r\n                        transform=\"translate(-33.132 -90.584)\"\r\n                    >\r\n                        <rect\r\n                            width=\"220.964\"\r\n                            height=\"30.994\"\r\n                            x=\"25.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#bababaff\"\r\n                            stroke=\"none\"\r\n                            filter=\"url(#filter1574)\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                        <rect\r\n                            width=\"220.964\"\r\n                            height=\"30.994\"\r\n                            x=\"25.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#286db2ff\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                    </g>\r\n                </svg>\r\n                <p>SignUp</p>\r\n                <div className=\"clickDetector\"\r\n                    onClick={() => { postNewUser() }}\r\n                ></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useEffect, useState, useRef } from 'react';\r\nimport './signMain.css';\r\nimport SignIn from './signIn'\r\nimport SignUp from './signUp'\r\nimport Google from './googleOAuth';\r\nimport { ButtonPopRightLite } from '../../buttons';\r\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SignMain() {\r\n\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",//string\r\n        password: \"\", //string\r\n        email: \"\",    //string\r\n        id: 0 //number\r\n    })\r\n\r\n    const setUserName = name => {\r\n        setUserData({ ...userData, username: name })\r\n    }\r\n\r\n    const setPassWord = pass => {\r\n        setUserData({ ...userData, password: pass })\r\n    }\r\n\r\n    const setEmail = email => {\r\n        setUserData({ ...userData, email: email })\r\n    }\r\n\r\n    const setId = Id => {\r\n        setUserData({ ...userData, id: Id })\r\n    }\r\n\r\n    return (\r\n        <div className=\"signinWrapperWrapper\">\r\n            <div className=\"signinWrapper\">\r\n                <div className=\"signInBox\">\r\n                    <svg className=\"signIn\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        version=\"1.1\"\r\n                        viewBox=\"0 0 159.773 170.181\"\r\n                    >\r\n                        <defs>\r\n                            <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                            <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                            <filter\r\n                                id=\"filter2371\"\r\n                                width=\"1.162\"\r\n                                height=\"1.15\"\r\n                                x=\"-0.081\"\r\n                                y=\"-0.075\"\r\n                                colorInterpolationFilters=\"sRGB\"\r\n                            >\r\n                                <feGaussianBlur stdDeviation=\"4.713\"></feGaussianBlur>\r\n                            </filter>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        </defs>\r\n                        <g strokeWidth=\"0.265\" transform=\"translate(-103.432 -69.502)\">\r\n                            <rect\r\n                                width=\"139.851\"\r\n                                height=\"150.435\"\r\n                                x=\"113.393\"\r\n                                y=\"79.375\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2371)\"\r\n                                opacity=\"1\"\r\n                                rx=\"0\"\r\n                                ry=\"4.11\"\r\n                                transform=\"translate(3.047 2.57) scale(.98338)\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"139.851\"\r\n                                height=\"150.435\"\r\n                                x=\"114.499\"\r\n                                y=\"78.357\"\r\n                                fill=\"#fff\"\r\n                                rx=\"5.641\"\r\n                                ry=\"6.31\"\r\n                            ></rect>\r\n                        </g>\r\n                    </svg>\r\n                    <Switch>\r\n                        <Route path=\"/signup\" render={() =>\r\n                            <SignUp setUserName={setUserName}\r\n                            ></SignUp>\r\n                        }></Route>\r\n                        <Route exact path=\"/\" render={() =>\r\n                            <SignIn userData={userData}\r\n                                setUserName={setUserName}\r\n                                setPassWord={setPassWord}\r\n                                setEmail={setEmail}\r\n                                setId={setId}\r\n                            ></SignIn>\r\n                        }></Route>\r\n                    </Switch>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignMain","import React, { useState } from 'react';\r\nimport './campaign.css'\r\nimport store from '../../../store/store'\r\nimport { loadCampaign } from '../../../actions'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Campaign = ({ campId, campName }) => {\r\n\r\n    const { push } = useHistory(null)\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"campName\">\r\n                {campName}\r\n            </div>\r\n            <div className=\"loadButtonHolder\">\r\n                <div className=\"loadButton\"\r\n                    onClick={() => {\r\n                        store.dispatch(loadCampaign({ campId, campName }));\r\n                        push(\"/dashboard/loadedcamp\")\r\n                    }}\r\n                >\r\n                    Load\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campaign;","import React, { useEffect, useState } from 'react';\r\nimport Campaign from './campaign'\r\nimport store from '../../../store/store'\r\n\r\nconst Campaigns = () => {\r\n    const [camps, setCamps] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        setCamps(store.getState().campaigns)\r\n        console.log(store.getState().campaigns)\r\n    })\r\n\r\n    store.subscribe(() => {\r\n        setCamps(store.getState().campaigns)\r\n    })\r\n\r\n    return (\r\n        <div className=\"subContentActual\">\r\n            {camps ? camps.map(camp => <Campaign\r\n                key={camp.id}\r\n                campId={camp.id}\r\n                campName={camp.name}></Campaign>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campaigns;","import React from 'react';\r\nimport './emaillist.css'\r\n\r\nconst EmailList = ({ campId, listName, file }) => {\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"campName\">\r\n                {listName}\r\n            </div>\r\n            <div className=\"loadButtonHolder\">\r\n                <div className=\"loadButton\"\r\n                // onClick={() => {\r\n                //     null\r\n                // }}\r\n                >\r\n                    Download\r\n                    {/* <a className=\"downloader\" herf={file} dowload></a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailList;","import React, { useState, useEffect } from 'react';\r\nimport store from '../../../store/store'\r\nimport EmailList from './emailList'\r\n\r\nconst EmailLists = () => {\r\n    const [lists, setLists] = useState(null)\r\n\r\n    store.subscribe(() => {\r\n        setLists(store.getState().emailList)\r\n    })\r\n    useEffect(() => {\r\n        setLists(store.getState().emailList)\r\n    })\r\n    return (\r\n        <div className=\"subContentActual\">\r\n            {lists ? lists.map(list =>\r\n                <EmailList key={list.id} campId={list.id} listName={list.name} file={list.upload_file} ></EmailList>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailLists;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './navbuttons.css'\r\nimport Champaigns from './campaignHolder/campaignHolder'\r\nimport EmailLists from './emailListHolder/emailListHolder'\r\n\r\n\r\nconst NavButtons = () => {\r\n\r\n    const { push } = useHistory(null)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topNav  subWrapper\">\r\n\r\n            </div>\r\n            <div className=\"dashBodyMain  subWrapper\">\r\n                <div className=\"leftDash  subDash\">\r\n                    <div className=\"contentholder\">\r\n                        <div className=\"contentButtons\">\r\n                            Champaigns\r\n                        </div>\r\n                        <div className=\"contentActual\">\r\n                            <Champaigns></Champaigns>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightDash subDash\">\r\n                    <div className=\"contentholder\">\r\n                        <div className=\"contentButtons\">\r\n                            Email Lists\r\n                        </div>\r\n                        <div className=\"contentActual\">\r\n                            <EmailLists></EmailLists>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"createCamp   midButtons subWrapper\"\r\n                    onClick={() => push(\"/dashboard/newcamp\")}\r\n                >\r\n                    Create Champaign\r\n                </div>\r\n                <div className=\"addEmailList midButtons subWrapper\">\r\n                    Add Emaillist\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavButtons;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../../store/store'\r\nimport { storeCampaign } from '../../../../actions'\r\nimport axios from 'axios'\r\n\r\nconst CampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    useEffect(() => {\r\n        setEmailCSV(store.getState().emailList)\r\n    })\r\n    // store.subscribe(() => {\r\n\r\n    // })\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                {/* <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div> */}\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input value={newCampaignData.campName} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input value={newCampaignData.senderName} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input value={newCampaignData.emailSub} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input value={newCampaignData.senderEmail} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailAttachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"subFieldLong Fields\">*/}\r\n                            {/* <label htmlFor=\"emailBody\">Email Body</label> */}\r\n                            {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                            {/* <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => push(\"/dashboard/newcamp/maileditor\")}\r\n                                >\r\n                                    Deisgn Body\r\n                                </div> */}\r\n                            {/* </div> */}\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                <select id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.value })}\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard\")\r\n                            }}\r\n                        >\r\n                            Back{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard/newcamp/maileditor\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Next {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CampForm;","import React, { useState, useRef } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport axios from 'axios'\r\nimport store from '../../../../store/store'\r\nimport CampForm from './campaignForm'\r\nimport { writeFile } from 'fs-web'\r\n\r\n\r\nconst NewCam = () => {\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: 0,//number\r\n        emailAttachment: null,//null\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/newcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/newcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() =>\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        const newHtml = async () => await (writeFile(\"sendPack.html\", html))\r\n                                        console.log(newHtml())\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).catch(er => {\r\n                                            if (er.response) {\r\n                                                if (er.response.status === 500) {\r\n                                                    document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                        console.log({\r\n                                            name: newCampaignData.campName,\r\n                                            sender_name: newCampaignData.senderName,\r\n                                            sender_email: newCampaignData.senderEmail,\r\n                                            email_subject: newCampaignData.emailSub,\r\n                                            my_customer: store.getState().userData.id,\r\n                                            camp_emails: Number(newCampaignData.emailListCVS),\r\n                                            email_message: \"will see\",\r\n                                            temp_json: design,\r\n                                            ht: newCampaignData.emailBodyHTML,\r\n                                            attachment: newCampaignData.emailAttachment\r\n                                        })\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }\r\n\r\n                        >\r\n                            Save & Send\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/newcamp\" render={() =>\r\n                <CampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></CampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NewCam;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../../store/store'\r\nimport { storeCampaign } from '../../../../actions'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData, loadTheTemplate }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(store.getState())\r\n        const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null\r\n        console.log(loadedCamp)\r\n        if (loadedCamp) {\r\n            const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp)\r\n            setNewCampaignData(first[0])\r\n            console.log(\"reached\", store.getState().campaigns.filter(camp => camp.id === loadedCamp))\r\n        }\r\n    }, [])\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData.campName)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input defaultValue={newCampaignData.name} ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input defaultValue={newCampaignData.sender_name} ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input defaultValue={newCampaignData.email_subject} ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, email_subject: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input defaultValue={newCampaignData.sender_email} ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_email: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n\r\n                                <input type=\"file\" id=\"emailList\" files={[newCampaignData.attachment]}\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, attachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => {\r\n                                        push(\"/dashboard/loadedcamp/maileditor\")\r\n                                        setTimeout(() => {\r\n                                            loadTheTemplate(newCampaignData.temp_json)\r\n                                        }, 500)\r\n                                    }}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n\r\n                        >\r\n                            Update & Send{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                store.dispatch(storeCampaign(newCampaignData));\r\n                                push(\"/dashboard\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Update & Exit {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;","import React, { useState, useRef, useEffect } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport store from '../../../../store/store'\r\n\r\nimport LoadedCampForm from './loadedCampForm'\r\n\r\nconst LoadedCamp = () => {\r\n\r\n    const initialState = {\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: null,//file\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    }\r\n    const [newCampaignData, setNewCampaignData] = useState(initialState)\r\n    const [loadFunc, setloadFunc] = useState(null)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n\r\n    const emailEditorRef = useRef(null);\r\n\r\n\r\n\r\n    const loadTheTemplate = (data) => {\r\n        emailEditorRef.current.editor.loadDesign(data)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(emailEditorRef.current.editor)\r\n    // })\r\n\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/loadedcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/loadedcamp\")}\r\n\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() => {\r\n                                console.log(emailEditorRef.current)\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n\r\n                                    push(\"/dashboard/loadedcamp\")\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                        >\r\n                            Save & Next\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                <LoadedCampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                    loadTheTemplate={loadTheTemplate}\r\n                ></LoadedCampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default LoadedCamp;","import React, { useState } from 'react';\r\nimport './emailuploader.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport store from '../../../store/store'\r\nimport { getAllEmailList } from '../../../actions'\r\n\r\nconst EmailListUploader = () => {\r\n    const [emailListState, setEmailListState] = useState({ name: \"\", file: \"\" })\r\n    const { push } = useHistory(null)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topNav  subWrapperCam\">\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolderEmail\">\r\n                    <form className=\"formFieldsEmail  FieldsEmail\">\r\n                        <div className=\"subFormEmail\">\r\n                            <div className=\"subFieldEmail\">\r\n                                <label htmlFor=\"emailName\">File Name</label>\r\n                                <input type=\"text\" id=\"emailName\" name=\"emailName\"\r\n                                    onChange={e => setEmailListState({ ...emailListState, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"subFormEmail\">\r\n                            <div className=\"subFieldEmail\">\r\n                                <label htmlFor=\"emailFile\">Upload File</label>\r\n                                <input type=\"file\" id=\"emailFile\" name=\"emailFile\"\r\n                                    onChange={e => setEmailListState({ ...emailListState, file: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtonsEmail FieldsEmail\">\r\n                        <div className=\"sendButton lowButtonEmails \"\r\n                            onClick={() => { push(\"/dashboard\") }}\r\n                        >Back</div>\r\n                        <div className=\"createButton lowButtonEmails \"\r\n                            onClick={() => {\r\n                                console.log(emailListState.file, emailListState.name, store.getState().userData.id)\r\n                                var formData = new FormData();\r\n                                formData.append(\"upload_file\", emailListState.file)\r\n                                formData.append(\"name\", emailListState.name)\r\n                                formData.append(\"my_customer\", store.getState().userData.id)\r\n                                axios.post(\"https://emailengine2020.herokuapp.com/newemail/\", formData\r\n                                ).then(res => console.log(res))\r\n                                store.dispatch(getAllEmailList(store.getState().userData.id))\r\n                                push('/dashboard')\r\n                            }}\r\n                        >Save</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmailListUploader;","import React, { useState, useRef } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './dashboard.css'\r\nimport NavButtons from './navbuttons'\r\nimport NewCam from './campaignHolder/newCampaign/newCam'\r\nimport LoadedCamp from './campaignHolder/newCampaign/loadedCampaign'\r\nimport EmailListUploader from './emailListHolder/emailListUploader'\r\n\r\n\r\nconst DashBoard = () => {\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <div className=\"dashWrapper\">\r\n            <div className=\"sideNavHolder subWrapper\">\r\n                <div className=\"cessiniHolder  subWrapper\">\r\n                    <svg className=\"cessiniSVG\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        version=\"1.1\"\r\n                        viewBox=\"0 0 21.055 8.546\"\r\n                    >\r\n                        <defs>\r\n                            <radialGradient\r\n                                id=\"radialGradient1003\"\r\n                                cx=\"76.011\"\r\n                                cy=\"66.752\"\r\n                                r=\"125\"\r\n                                fx=\"76.011\"\r\n                                fy=\"66.752\"\r\n                                gradientTransform=\"matrix(-.15696 .00018 -.0001 -.08285 12.285 105.117)\"\r\n                                gradientUnits=\"userSpaceOnUse\"\r\n                                xlinkHref=\"#linearGradient1001\"\r\n                            ></radialGradient>\r\n                            <linearGradient id=\"linearGradient1001\">\r\n                                <stop offset=\"0\" stopColor=\"#fff\" stopOpacity=\"1\"></stop>\r\n                                <stop offset=\"1\" stopColor=\"#000\" stopOpacity=\"0.213\"></stop>\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <g fillOpacity=\"1\" stroke=\"none\" transform=\"translate(9.772 -94)\">\r\n                            <path\r\n                                fill=\"url(#radialGradient1003)\"\r\n                                strokeWidth=\"0.131\"\r\n                                d=\"M.738 94c-1.396 0-2.78.021-3.795.061h-6.715v2.164a.562.562 0 01.003.052v2.098c.418.724 4.37 3.77 5.235 3.994.913.237 9.632.237 10.545 0 .913-.236 5.272-3.622 5.272-4.095V94.06h-6.75c-1.015-.04-2.399-.06-3.795-.06z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#17264a\"\r\n                                strokeWidth=\"0.125\"\r\n                                d=\"M.738 94.006c-1.396 0-2.78.019-3.796.055h-6.714v1.97a.465.465 0 01.003.047v1.909c.418.66 4.37 3.432 5.235 3.636.913.215 9.632.215 10.545 0 .913-.215 5.272-3.297 5.272-3.728v-3.834h-6.75a114.66 114.66 0 00-3.795-.055z\"\r\n                            ></path>\r\n                            <g fill=\"#fff\" transform=\"matrix(.05103 0 0 .05103 -5.304 98.105)\">\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M44.398 23.85c1.234.04 4.474-4.127 4.474-4.127l-13.193-.463c-1.466.232-2.931.463-4.282 1.428-1.35.964-2.585 2.662-3.086 4.552-.501 1.891-.27 3.974.364 5.46.634 1.485 1.759 2.449 3.147 3.22 1.39.771 3.087 1.389 5.248 1.718 2.162.33 5.064.376 7.828.42l3.442-4.299-10.873-.596c-1.136-.418-2.271-.837-2.997-1.596-.725-.759-1.028-1.819-.778-2.764.251-.946 1.138-1.833 2.025-2.342.886-.508 1.66-.649 3.319-.687 1.659-.039 4.128.038 5.362.077z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M64.615 35.033c.708-.687 1.816-2.105 2.26-2.903.444-.797.222-.974-1.839-.997-2.06-.022-5.96.11-8.021.133-2.06.022-2.282-.066-2.327-.376-.045-.31.088-.842.154-1.152.067-.31.067-.4 1.463-.4 1.397-.001 4.277.089 5.777.078 1.5-.01 1.602-.078 2.156-.831a60.04 60.04 0 001.981-2.898c.453-.727.346-.78.17-.825-.178-.044-.444-.089-2.35-.044-1.906.044-5.45.177-7.246.222-1.795.044-1.839 0-1.861-.31-.023-.31-.023-.886.04-1.206.061-.32.115-.346 1.667-.324 1.552.022 4.564.11 6.092.111 1.529 0 1.573-.088 2.06-.687.488-.598 1.419-1.706 1.862-2.326.443-.62.4-.753-2.393-.798-2.791-.045-8.42 0-11.234 0s-2.858-.044-2.925-.022c-.067.022-.156.11-.2 2.792a419.496 419.496 0 000 10.592c.045 2.636.045 2.636.245 2.703.2.066.554.2 2.77.221 2.215.022 6.293-.066 8.486-.089 2.194-.022 2.504.023 3.213-.664z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M68.648 34.745c.354-.754 1.417-2.26 1.994-2.991.577-.731.665-.687 2.77-.665 2.105.022 6.227.022 8.354.022 2.127 0 2.26 0 2.432-.19.171-.19.403-.608.47-.94.067-.332-.022-.598-.775-.798-.753-.2-2.171-.332-4.188-.399-2.016-.067-4.63-.067-6.116-.067-1.484 0-1.839 0-2.285-.103a5.357 5.357 0 01-1.636-.716c-.577-.376-1.153-.908-1.486-1.75-.332-.842-.421-1.994-.2-2.925.222-.931.754-1.64 1.286-2.172.532-.532 1.063-.887 1.418-1.153.354-.266.532-.443 3.501-.51 2.97-.066 8.731-.021 11.611.09 2.88.111 2.88.2 2.46.864-.422.665-1.264 1.861-1.64 2.46-.376.597-.376.597-2.304.575l-7.888-.088c-2.061-.023-2.283-.023-2.483.11-.2.134-.377.4-.465.644-.089.244-.089.465.155.62.245.155.732.243 2.726.288 1.995.044 5.496.044 7.512.133 2.017.088 2.548.266 3.102.62.554.355 1.13.887 1.573 1.53a5.43 5.43 0 01.886 2.216c.133.82.088 1.706-.111 2.348-.2.642-.554 1.041-1.02 1.462-.464.42-1.04.864-1.727 1.285-.687.421-1.485.82-2.15 1.02-.664.199-1.196.199-2.769.199-1.573 0-4.188 0-6.47-.044-2.282-.045-4.232-.133-5.385-.178-1.152-.044-1.506-.044-1.152-.797z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M91.116 35.01c.354-.753 1.418-2.26 1.995-2.99.576-.732.665-.687 2.77-.665 2.105.021 6.227.021 8.354.021 2.127 0 2.26 0 2.431-.19.172-.19.404-.607.47-.939.067-.332-.021-.598-.774-.798-.753-.2-2.171-.333-4.188-.4-2.016-.066-4.631-.066-6.116-.066-1.484 0-1.839 0-2.285-.103a5.357 5.357 0 01-1.637-.716c-.576-.376-1.152-.908-1.485-1.75-.333-.842-.421-1.994-.2-2.925.222-.931.753-1.64 1.285-2.172.532-.532 1.064-.887 1.419-1.153.354-.266.531-.443 3.501-.51 2.97-.066 8.731-.022 11.611.09 2.88.111 2.88.2 2.46.864-.422.664-1.264 1.86-1.64 2.46-.376.597-.376.597-2.304.575l-7.888-.088c-2.061-.023-2.283-.023-2.483.11-.2.133-.377.4-.466.644-.088.244-.088.465.156.62.244.155.732.243 2.726.288 1.994.044 5.495.044 7.512.133 2.016.088 2.548.266 3.102.62.554.355 1.13.887 1.573 1.53a5.43 5.43 0 01.886 2.216c.133.82.088 1.706-.111 2.348-.2.642-.554 1.04-1.02 1.462-.465.42-1.04.864-1.728 1.285-.686.42-1.484.82-2.149 1.02-.664.199-1.196.199-2.77.199-1.572 0-4.187 0-6.47-.045-2.282-.044-4.232-.132-5.384-.177-1.152-.044-1.507-.044-1.153-.797z\"\r\n                                ></path>\r\n                                <path d=\"M114.87 19.145h3.457c.589 0 1.063.474 1.063 1.064V34.7c0 .59-.474 1.064-1.063 1.064h-3.457c-.59 0-1.064-.474-1.064-1.064V20.21c0-.59.475-1.064 1.064-1.064z\"></path>\r\n                                <path d=\"M143.986 19.41h3.457c.59 0 1.063.475 1.063 1.064v14.492c0 .59-.474 1.064-1.063 1.064h-3.457c-.59 0-1.063-.475-1.063-1.064V20.474c0-.589.474-1.063 1.063-1.063z\"></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M135.477 19.229c0 2.969 0 5.937-.067 7.466-.066 1.53-.199 1.619-.332 1.707-1.462-1.462-2.926-2.925-3.635-3.656l-.22-.225v-.058c-1.684-1.507-3.366-3.013-4.496-3.856-1.13-.842-1.707-1.019-2.438-1.086-.731-.066-1.62-.022-2.174.245-.554.266-.774.752-.996 1.24v14.758h5.319c0-2.97 0-5.938.066-7.467.067-1.53.199-1.619.332-1.707 1.462 1.462 2.926 2.925 3.635 3.656l.22.225v.058c1.684 1.507 3.366 3.013 4.496 3.856 1.13.842 1.707 1.019 2.438 1.086.731.066 1.617.022 2.172-.244.554-.267.776-.753.998-1.24V19.228z\"\r\n                                ></path>\r\n                                <path d=\"M149.713 35.484c-.295 0-.531.11-.531.246 0 .137.236.245.53.245h.872c-.009.063-.031.11-.031.181v2.3c0 .337.11.61.246.61s.244-.273.244-.61v-2.3c0-.07-.02-.118-.03-.181h.706c.295 0 .531-.108.531-.245 0-.136-.236-.246-.531-.246z\"></path>\r\n                                <path\r\n                                    strokeWidth=\"1.071\"\r\n                                    d=\"M152.998 35.545c-.008 0-.014.01-.021.012-.008.002-.02-.003-.028.002-.005.003-.005.012-.01.015-.107.067-.187.296-.187.582v2.3c0 .337.11.61.246.61s.244-.273.244-.61V36.58l1.078 1.844c.114.195.25.335.37.402.007.01.01.025.019.031.013.008.031.002.047.004.013.005.024.003.037.004.013-.001.024.001.039-.004.015-.002.034.004.047-.004.01-.006.012-.022.02-.03.118-.068.254-.208.368-.403l1.036-1.77v1.883c0 .338.108.61.244.61s.246-.272.246-.61v-2.299a1.08 1.08 0 00-.094-.466c.006-.1-.008-.181-.06-.213-.124-.077-.374.116-.56.433l-1.259 2.156c-.014.025-.015.045-.027.069-.013-.024-.011-.044-.026-.069l-1.26-2.156c-.158-.272-.36-.442-.493-.44-.005 0-.01-.007-.016-.007z\"\r\n                                ></path>\r\n                            </g>\r\n                            <g\r\n                                style={{\r\n                                    lineHeight: \"1.25\",\r\n                                    InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                    fontVariantLigatures: \"normal\",\r\n                                    fontVariantCaps: \"normal\",\r\n                                    fontVariantNumeric: \"normal\",\r\n                                    fontVariantEastAsian: \"normal\",\r\n                                    whiteSpace: \"pre\",\r\n                                }}\r\n                                fill=\"#fff\"\r\n                                style={{ ariaLabel: \"Mail\" }}\r\n                                fontFamily=\"Cambria\"\r\n                                fontSize=\"40\"\r\n                                fontStretch=\"normal\"\r\n                                fontStyle=\"italic\"\r\n                                fontVariant=\"normal\"\r\n                                fontWeight=\"bold\"\r\n                                transform=\"matrix(.02748 0 0 .03243 -5.018 99.294)\"\r\n                            >\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M303.54-6.295l1.522 16.309 9.258-16.309h9.082l-.273 1.29q-.82.234-1.27.644-.43.41-.742 1.172-.312.742-.625 2.168l-3.555 16.113q-.117.508-.156.8-.039.294-.078.645-.02.332-.02.84 0 .82.372 1.21.39.372 1.25.49l-.274 1.288h-9.824l.274-1.289q.82-.234 1.25-.644.449-.41.761-1.153.313-.761.625-2.187l1.797-8.203q.293-1.328.84-3.535.547-2.227 1.27-4.649h-.391q-.918 1.68-1.973 3.496l-8.789 15.215h-3.164l-1.289-11.738q-.254-2.227-.39-3.887-.118-1.66-.196-3.281h-.312q-.274 1.797-.704 4.12-.43 2.306-.78 3.888l-1.895 8.574q-.118.508-.157.8-.039.294-.078.645-.02.332-.02.84 0 .82.372 1.21.39.372 1.25.49l-.274 1.288h-7.168l.274-1.289q.82-.234 1.25-.644.45-.41.762-1.153.312-.761.625-2.187l3.554-16.113q.254-1.153.254-2.286 0-.82-.39-1.191-.372-.39-1.23-.508l.273-1.289z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M339.574 2.084l1.758-1.406 2.188.312-3.008 13.614q-.235 1.035-.352 1.66-.098.625-.098 1.054 0 .88.43 1.27t1.524.488l-.215 1.29h-7.5l1.054-4.005-.253-.078q-1.329 1.719-2.48 2.676-1.134.937-2.247 1.328-1.094.39-2.54.39-1.366 0-2.401-.644-1.036-.644-1.641-2.031-.606-1.406-.606-3.555 0-2.05.47-4.14.487-2.09 1.425-3.887.937-1.816 2.363-3.106 1.426-1.289 3.223-1.953 1.816-.683 3.945-.683 2.91 0 4.961 1.406zm-2.949 6.133q.137-.625.215-1.387.098-.781.098-1.504 0-1.289-.489-1.953-.488-.664-1.601-.664-1.817 0-3.223 1.836-1.406 1.816-2.266 4.902-.859 3.086-.859 5.528 0 1.425.41 2.129.43.703 1.309.703 1.289 0 2.617-1.25 1.348-1.27 2.168-2.97.82-1.698 1.465-4.648z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M357.035-6.803l-1.015 4.785h-5.06l1.075-4.785zm-4.512 21.953q-.214.977-.273 1.446-.059.468-.059.781 0 .84.43 1.21.45.372 1.524.49l-.215 1.288h-8.125l3.047-13.633q.253-1.171.351-1.816.098-.664.098-1.113 0-.762-.371-1.074-.352-.333-1.504-.45l.293-1.289 5.722-.215h2.227z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M367.23-7.604h2.208l-5.04 22.754q-.195.899-.273 1.387-.059.488-.059.84 0 .84.43 1.21.45.372 1.524.49l-.215 1.288h-8.125l4.941-22.07q.43-1.914.43-2.793 0-.43-.098-.664-.078-.254-.254-.41-.176-.157-.469-.235-.293-.097-1.152-.214l.313-1.27z\"\r\n                                ></path>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"contentHolder  subWrapper\">\r\n                    <div className=\"MyEmailList sideButtons\"\r\n                        onClick={() => push(\"/dashboard/newemaillist\")}\r\n                    >Add Email Lists</div>\r\n                    <div className=\"MyCampaign  sideButtons\"\r\n                        onClick={() => push(\"/dashboard/newcamp\")}\r\n                    > Create Campaign</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dashBody      subWrapper\">\r\n                <Switch>\r\n                    <Route path=\"/dashboard/newcamp\" render={() =>\r\n                        <NewCam></NewCam>\r\n                    }>\r\n                    </Route>\r\n                    <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                        <LoadedCamp></LoadedCamp>\r\n                    }>\r\n                    </Route>\r\n                    <Route path=\"/dashboard/newemaillist\" render={() => <EmailListUploader></EmailListUploader>}></Route>\r\n                    <Route path=\"/dashboard\" render={() => <NavButtons></NavButtons>}></Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;","\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport EmailEditor from 'react-email-editor';\nimport { useSpring, animated, config } from 'react-spring'\n\nimport './App.css';\n// import TopNav from './topNav';\n// import LowNav from './lowNav';\n// import FirstBody from './firstBody.txt';\n// import MailEditor from './mailEditor';\n// import LowButtons from './lowButtons';\n// import SendPage from './sendPage';\nimport SignMain from './signInPage/signMain';\nimport DashBoard from './Dashboard/dashBoard';\nimport ButtonPopRightLite from '../buttons';\n\nfunction App() {\n  const [activeDic, setActiveDic] = useState({ activeSend: false, activeMail: false })\n  const [contract, setContract] = useState(true)\n  const [inputSaveButton, setinputSaveButton] = useSpring(() => ({ transform: \" rotateY(0deg) translate(0%,0%) scale(1)\" }))\n  const [inputBox, setinputBox] = useSpring(() => ({ width: \"0%\" }))\n  const [button, setButton] = useSpring(() => ({ width: \"5%\", height: \"10%\" }))\n  const [round, setRound] = useSpring(() => ({ round1: \"50%\", round2: \"50%\", widthfont: \"90%\", xfront: \"5%\" }))\n  const [rest, setRest] = useSpring(() => ({ widthfont: \"90%\", xfront: \"5%\" }))\n  const { push } = useHistory()\n\n  const emailEditorRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const loadTheTemplate = (data) => {\n    emailEditorRef.current.editor.loadDesign(data)\n  }\n  console.log(\"working\")\n  return (\n    <div className=\"primaryWindow\">\n      <Switch>\n        <Route path=\"/dashboard\" render={() => <DashBoard></DashBoard>}></Route>\n        <Route path=\"/\" render={() => <SignMain></SignMain>}></Route>\n      </Switch>\n      {/* <div className=\"top\">\n                <TopNav activeDic={activeDic}></TopNav>\n              </div>\n              <div className=\"low\">\n                <LowNav></LowNav>\n              </div>\n          <div className=\"midBodies\">\n              <div className=\"MailEditor\">\n              </div>\n              <div className=\"midButtons\">\n                <Switch>\n                  <Route path=\"/mailEditor\" render={()=><div className=\"editorWindow\"><EmailEditor ref={emailEditorRef}></EmailEditor></div>}></Route>\n                  <Route path=\"/sendPage\" render={()=><SendPage handelDic={setActiveDic} loadTheTemplate={loadTheTemplate}></SendPage>}></Route>\n                  <Route exact path=\"/\" render={()=><FirstBody  handelDic={setActiveDic} ></FirstBody>}></Route>\n                </Switch>\n              </div>\n          </div>\n          <div className=\"mailEditorButtons\">\n              <LowButtons  setinputBox={setinputBox} activeDic={activeDic} handelDic={setActiveDic}></LowButtons>\n              <animated.div className=\"templateNameInput\" style={inputBox}>\n                <div className=\"Inputbox\">\n                    <input ref={inputRef} className=\"Input\" placeholder=\"New Template\"></input>\n                    <svg className=\"InputboxSVG\"\n                        viewBox=\"0 0 171.601 73.327\"\n                        height={277.143}\n                        width={648.571}\n\n                        >\n                        <defs>\n                            <path id=\"prefix__a\" d=\"M33.262 78.619h148.511v21.652H33.262z\" />\n                        </defs>\n                        <g transform=\"translate(-19.655 -100.542)\">\n                            <rect\n                            width={168.577}\n                            height={70.304}\n                            x={22.679}\n                            y={103.565}\n                            ry={8.137}\n                            fill=\"#989898\"\n                            fillOpacity={0.437}\n                            />\n                            <rect\n                            ry={8.137}\n                            y={100.542}\n                            x={19.655}\n                            height={70.304}\n                            width={168.577}\n                            fill=\"#fff\"\n                            />\n                            <rect\n                            width={92.982}\n                            height={20.411}\n                            x={85.137}\n                            y={125.485}\n                            ry={2.362}\n                            fill=\"#ff2723\"\n                            />\n                            <text\n                            transform=\"matrix(.46059 0 0 .4885 12.368 92.446)\"\n                            fontWeight={700}\n                            fontSize={14.111}\n                            fontFamily=\"Times New Roman\"\n                            fill=\"red\"\n                            >\n                            <tspan x={33.262} y={91.084}>\n                                <tspan>{\"Template Name\"}</tspan>\n                            </tspan>\n                            </text>\n                        </g>\n                    </svg>\n                    <animated.div className=\"InputSaveButton\"\n                        style={inputSaveButton}\n                        onMouseEnter={() => {\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1.2)\"})\n                        }}\n                        onMouseLeave={() => {\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1)\"})\n                        }}\n                        onClick={() => {\n                            emailEditorRef.current.editor.exportHtml(({design,html})=>{\n                              newTempalte({key:1, name:inputRef.current.value, data:design})\n                              setActiveDic({activeSend:true, activeMail:false})\n                              push(\"/sendPage\")\n                              setinputBox({width:\"0%\"})\n                              })\n                          }}\n                    >\n                        <svg  className=\"InputSaveButtonSVG\"\n                            viewBox=\"0 0 37.476 13.39\" height={50.609} width={141.642}>\n                            <defs>\n                                <path id=\"prefix__a\" d=\"M33.262 78.619H67.28V99.03H33.262z\" />\n                            </defs>\n                            <g transform=\"translate(-129.429 -176.245)\">\n                                <rect\n                                width={35.868}\n                                height={12.372}\n                                x={131.037}\n                                y={177.264}\n                                ry={2.683}\n                                fillOpacity={0.319}\n                                />\n                                <rect\n                                ry={2.683}\n                                y={176.245}\n                                x={129.429}\n                                height={12.372}\n                                width={35.868}\n                                fill=\"#ff2723\"\n                                />\n                                <text\n                                transform=\"matrix(.43155 0 0 .43155 128.54 145.384)\"\n                                fontWeight={700}\n                                fontSize={14.111}\n                                fontFamily=\"Times New Roman\"\n                                fill=\"#fff\"\n                                >\n                                <tspan x={33.262} y={91.084}>\n                                    <tspan>{\"Save\"}</tspan>\n                                </tspan>\n                                </text>\n                                <path\n                                d=\"M137.034 180.145a.554.554 0 00-.555.556v4.235c0 .308.248.555.555.555h4.261a.554.554 0 00.556-.555v-3.233a1.133 1.133 0 00-.105-.302l-1.149-1.158-.035-.022a1.175 1.175 0 00-.155-.076zm.389.76h2.698c.093 0 .167.1.167.225v1.096c0 .125-.074.225-.167.225h-2.698c-.093 0-.168-.1-.168-.225v-1.096c0-.124.075-.225.168-.225zm1.731 2.306a.773.76 0 01.004 0 .773.76 0 01.773.76.773.76 0 01-.773.76.773.76 0 01-.773-.76.773.76 0 01.769-.76z\"\n                                fill=\"#fff\"\n                                />\n                            </g>\n                            </svg>\n                    </animated.div>\n                </div>\n              </animated.div>\n          </div> */}\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return state\n// }\n// export default connect(mapStateToProps, { loadTempalteAct, newTempalte })(App);\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers'\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.Fragment>\n    {/* <Provider store={createStore(reducers)}> */}\n    <HashRouter>\n      <App></App>\n    </HashRouter>\n    {/* </Provider> */}\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}